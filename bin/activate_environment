#!/bin/bash
##############################################################################
# activate_environment
# -----------
# This script load a PIP VirtualEnvironment and serves mainly as a helper script.
# It updates the bash prompt to indicate which environment is active
#
# Call with 'source activate_environment.sh <env>'
#
# :authors: Miel Donkers, @mieldonkers
# :date: 20 June 2016
# :version: 0.0.1
##############################################################################

function check_sourced {

  local last_elem=${#FUNCNAME[@]}-1
  if [[ "main" == "${FUNCNAME[$last_elem]}" ]] ; then
    echo "Being executed from a sub-shell, which won't set the environment correctly"
    echo "Execute as 'source activate_environment <env>' or '. activate_environment <env>'"
    exit
  fi

}


check_sourced

if [[ -n $1 && -d $1 && -f "$1/bin/activate" ]] ; then
  echo "Activating virtualenv $1"
  # shellcheck source=/dev/null
  source "$1/bin/activate"
  VENV_NAME=${1%/}

  if [[ -z $PREV_PROMPT_COMMAND ]] ; then
    PREV_PROMPT_COMMAND=$PROMPT_COMMAND
  fi

  function set_venv_prompt {
    if [[ -n $VIRTUAL_ENV ]] ; then
      __git_ps1 "\h:\W (env:$VENV_NAME) \[\033[00;34m\]" "\[\033[00m\] \u\\\$ "
    else
      PROMPT_COMMAND=$PREV_PROMPT_COMMAND
      unset PREV_PROMPT_COMMAND
      eval "$PROMPT_COMMAND"
    fi
  }

  PROMPT_COMMAND="set_venv_prompt"


  echo "Deactivate the virtualenv environment by typing 'deactivate' or exiting the shell"
  return 0
fi

echo "Provide a valid virtualenv environment to activate"
return 1

